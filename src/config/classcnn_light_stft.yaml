data_spliting: "pos_split"

loss: "CrossentropyLoss"

arcface: false # if true, loss needs to be "CrossentropyLoss"

margin: 0.1

scale: 64

model_name: "ClassCNN1"

batch_size: 512 # 1024

input_type: "spectrogram"

augmentations: []

spectrogram_window_size: 32

data_type: "complex"

additional_samples: 9

same_positions: false

class_hidden_size: 64

conv_features1_nb: 20

conv_features2_nb: 20

conv_kernel1_size: 3 # 15 for 1d, 3 for 2d

conv_kernel2_size: 6 # 6 for 1d, 2 (oder 4?) for 2d

conv_layers_nb: 2

class_layers_nb: 1

stride_size: 2

tail_fc_layers_nb: 1

pooling_kernel_size: 2

pooling_stride_size: 2

data_limit: 500000

data_test_rate: 0.1

datafile: "data/Messung_9/messung9.raw.3_data.npy"

device: "cuda"

dropout_value: 0

expender_out: 138

feature_norm: "batch"

flat_data: true

labelfile: "data/Messung_9/messung9.raw.3_labels.npy"

latent_dimention: 128

learning_rate: 0.001

lr_limit: 0.00001

nb_epochs: 25

steps_per_epoch: 1366 #1366

noise_amount: 0

num_dev: 13

num_pos: 48

optimizer: "Adam"

cnn_padding_size: 1 #7 for 1d, 2(kernel5) or 1(kernel3) for 2d

patience: 1

plotting: false

set_parameters: "params.set_parameters"

sheduler: "plateau"

signal_length: 250

split_train_ratio: 0.8

test_interval: 1

use_extender: false

save_model: false

use_gpu: true

use_wandb: true

validation_dev: []

validation_pos: [5,10,15] # ,10,15

verbose: true

warmup_steps: 50

window_size: 16

saved_model_suffix: "model_test12_stft"